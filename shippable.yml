# vim: et sr sw=2 ts=2 smartindent:
#
# Set to only build on git tag events and pull requests
# in shippable console.
language: none

env:
  global:
    - secure: VF/oUYBtVqG+UWFhjA9v2zaumXheiGePA9OfuA8lFoDypHMkHXZHkcf5MrKbRh4KQ86ao1V8isG+81Tf04Ug5SXjkyfk9kA8x/PKz94kUWE13OtuslunZATR80DI7S7QuFuUZFYe/J8N/afj6x/rpvOwX7DZmSfv9ussQ4GLbs21NhkEPUQMzteJHRchfTgb9fszXdD/11VvZhYK9PEAfDyPtfbjyC8vKa1lRFS+jsS8kWe2Iqcu/h7a9aiNE7lh/rYa/plI8hhn/XHePpbV3Yqiys1kzRCBhetCCG80oOaKXXZLWMVAj+tlIK7q3C4RG89ha3fOw8STyBkqcT11iw==

build:

  ci:
    - sudo apt-get update && sudo apt-get install -y coreutils realpath ;
      if [[ "${GITHUB_TOKEN}x" == "x" ]]; then echo "GITHUB_TOKEN not available" ; fi ;
      (
        cd bash ;
        echo "running tests for bash libs" ;
        rc=0 ; libs="$(find . -path './t' -prune -o -name '*.functions' -print)" ;
        for lib in $libs; do
          f="t/${lib#./}" ;
          echo -e "\n\nRUNNING $f ..." ;
          [[ -x $f ]] && ! $f && echo "failure from $lib" && rc=1 ;
        done ;
        [[ $rc -eq 0 ]]
      )

  on_success: ./bash/bundles/release

integrations:
  hub:
    - integrationName: opsgang_dockerhubreg
      type: dockerRegistryLogin

  notifications:
    - integrationName: opsgang_slack_delivery
      type: slack
      recipients: "#delivery"
      on_success: always
      on_failure: never
      on_pull_request: never

