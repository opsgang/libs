# vim: et sr sw=2 ts=2 smartindent:
#
# Set to only build on release events and pull requests
# in shippable console.
language: none

env:
  global:
    - IMG="aws_env"

build:

  ci:
    - sudo apt-get update && sudo apt-get install -y coreutils realpath ;
      cd bash ;
      echo "running tests for bash libs" ;
      rc=0 ;
      for suite in std; do
        libs=$(find $suite -type f | grep -v 'README' | grep -vP '\.(awk|md|markdown|txt)$') ;
        for lib in $libs; do
          [[ ! -x "t/$lib" ]] && echo "No executable tests for $lib. Build will fail." && rc=1;
          ! t/$lib && echo "failure from $lib" && rc=1 ;
        done ;
      done ;
      [[ $rc -eq 0 ]]

  on_success:
    - if [[ "$IS_RELEASE" == "true" ]] && [[ "$GIT_TAG_NAME" =~ ^[0-9\.]+$ ]]; then
        echo "... would build some release assets if tagged" ;
        echo "shippable vars:" ;
        echo "BRANCH: $BRANCH"
        echo "IS_PULL_REQUEST: $IS_PULL_REQUEST"
        echo "IS_GIT_TAG : $IS_GIT_TAG"
        echo "GIT_TAG_NAME: (only if tag or release event): $GIT_TAG_NAME"
        echo "IS_RELEASE: $IS_RELEASE"
        echo "RELEASE_NAME: $RELEASE_NAME"
      else
        echo "... not a release"
        echo "shippable vars:" ;
        echo "BRANCH: $BRANCH"
        echo "IS_PULL_REQUEST: $IS_PULL_REQUEST"
        echo "IS_GIT_TAG : $IS_GIT_TAG"
        echo "GIT_TAG_NAME: (only if tag or release event): $GIT_TAG_NAME"
        echo "IS_RELEASE: $IS_RELEASE"
        echo "RELEASE_NAME: $RELEASE_NAME"
      fi

integrations:
  hub:
    - integrationName: opsgang_dockerhubreg
      type: dockerRegistryLogin

  notifications:
    - integrationName: opsgang_slack_delivery
      type: slack
      recipients: "#delivery"
      on_success: always
      on_failure: never
      on_pull_request: never

